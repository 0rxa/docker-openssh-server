#!/usr/bin/with-contenv bash

# create folders
mkdir -p \
    /config/.ssh \
    /config/ssh_host_keys

USER_NAME=${USER_NAME:-linuxserver.io}
echo "User name is set to $USER_NAME"

# set password for abc to unlock it and set sudo access
sed -i "/${USER_NAME} ALL.*/d" /etc/sudoers
if [ "$SUDO_ACCESS" == "true" ]; then
    if [ -n "$SUDO_PASSWORD" ] || [ -n "$SUDO_PASSWORD_FILE" -a -f "$SUDO_PASSWORD_FILE" ]; then
        echo "${USER_NAME} ALL=(ALL) ALL" >> /etc/sudoers
        echo "Sudo is enabled with password."
    else
        echo "${USER_NAME} ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
        echo "Sudo is enabled without password."
    fi
else
    echo "Sudo is disabled."
fi

[[ -n "$SUDO_PASSWORD_FILE" ]] && [[ -f "$SUDO_PASSWORD_FILE" ]] && \
    SUDO_PASSWORD=$(cat "$SUDO_PASSWORD_FILE") && \
    echo "Sudo password is retrieved from file."
SUDO_PASSWORD=${SUDO_PASSWORD:-$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-8};echo;)}
echo "${USER_NAME}:${SUDO_PASSWORD}" | chpasswd

if [ ! -L /etc/ssh ];then
    if [ ! -f /config/ssh_host_keys/sshd_config ]; then
        sed -i '/#PidFile/c\PidFile \/config\/sshd.pid' /etc/ssh/sshd_config
        cp -a /etc/ssh/sshd_config /config/ssh_host_keys/
    fi
    rm -Rf /etc/ssh
    ln -s /config/ssh_host_keys /etc/ssh
    ssh-keygen -A
fi

if [ ! -f /config/.ssh/authorized_keys ];then
    touch /config/.ssh/authorized_keys
fi

[[ -n "$PUBLIC_KEY" ]] && \
    [[ ! $(grep "$PUBLIC_KEY" /config/.ssh/authorized_keys) ]] && \
    echo "$PUBLIC_KEY" >> /config/.ssh/authorized_keys && \
    echo "Public key from env variable added"

[[ -n "$PUBLIC_KEY_FILE" ]] && [[ -f "$PUBLIC_KEY_FILE" ]] && \
    PUBLIC_KEY2=$(cat "$PUBLIC_KEY_FILE") && \
    [[ ! $(grep "$PUBLIC_KEY2" /config/.ssh/authorized_keys) ]] && \
    echo "$PUBLIC_KEY2" >> /config/.ssh/authorized_keys && \
    echo "Public key from file added"

# permissions
chown -R "${USER_NAME}":"${USER_NAME}" \
    /config
chmod 700 \
    /config/.ssh
chmod 600 \
    /config/.ssh/authorized_keys
